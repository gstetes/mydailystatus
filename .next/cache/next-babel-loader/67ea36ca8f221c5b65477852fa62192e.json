{"ast":null,"code":"var _jsxFileName = \"C:\\\\Private\\\\VSCode\\\\Projetos\\\\Web\\\\mydailystatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"app\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    });\n  })), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()} - ${today.getMonth()} - ${today.getDate()}`;\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        }));\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Private/VSCode/Projetos/Web/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) {\r\n      router.push('/')\r\n    } else if (props.forceCreate) {\r\n      router.push('/create-status')\r\n    }\r\n  })\r\n\r\n  if (!props.isAuth || props.forceCreate) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>app</h1>\r\n      <table>\r\n        {props.checkins.map(checkin => {\r\n          return (\r\n            <tr>\r\n\r\n            </tr>\r\n          )\r\n\r\n        })}\r\n      </table>\r\n      <pre>{JSON.stringify(props, null, 2)}</pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    const today = new Date()\r\n    const currentDate = `${today.getFullYear()} - ${today.getMonth()} - ${today.getDate()}`\r\n\r\n    const todaysCheckin = await db.collection('markers')\r\n      .doc(currentDate)\r\n      .collection('checks')\r\n      .doc(session.user.sub)\r\n      .get()\r\n\r\n    const todaysData = todaysCheckin.data()\r\n    let forceCreate = true\r\n\r\n    if (todaysData) {\r\n      forceCreate = false\r\n      const checkins =\r\n        await db.collection('markers')\r\n          .doc(currentDate)\r\n          .collection('checks')\r\n          .near({\r\n            center: todaysData.coordinates,\r\n            radius: 1000\r\n          })\r\n          .get()\r\n      const checkinsList = []\r\n      checkins.docs.forEach(doc => {\r\n        checkinsList.push({\r\n          ...doc.data(),\r\n          id: doc.id\r\n        })\r\n      })\r\n      return {\r\n        props: {\r\n          isAuth: true,\r\n          user: session.user,\r\n          forceCreate: false,\r\n          checkins: checkinsList\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      props: {\r\n        isAuth: true,\r\n        user: session.user,\r\n        forceCreate\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      isAuth: false,\r\n      user: {}\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}